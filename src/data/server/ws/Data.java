
package data.server.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Data", targetNamespace = "http://ws.server.data/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Data {


    /**
     * 
     * @return
     *     returns java.util.List<data.server.ws.User>
     */
    @WebMethod
    @WebResult(name = "user", targetNamespace = "")
    @RequestWrapper(localName = "readUserList", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadUserList")
    @ResponseWrapper(localName = "readUserListResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadUserListResponse")
    @Action(input = "http://ws.server.data/Data/readUserListRequest", output = "http://ws.server.data/Data/readUserListResponse")
    public List<User> readUserList();

    /**
     * 
     * @param uId
     * @return
     *     returns data.server.ws.User
     */
    @WebMethod
    @WebResult(name = "user", targetNamespace = "")
    @RequestWrapper(localName = "readUser", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadUser")
    @ResponseWrapper(localName = "readUserResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadUserResponse")
    @Action(input = "http://ws.server.data/Data/readUserRequest", output = "http://ws.server.data/Data/readUserResponse")
    public User readUser(
        @WebParam(name = "uId", targetNamespace = "")
        int uId);

    /**
     *
     * @param user
     */
    @WebMethod
    @RequestWrapper(localName = "createUser", targetNamespace = "http://ws.server.data/", className = "data.server.ws.CreateUser")
    @ResponseWrapper(localName = "createUserResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.CreateUserResponse")
    @Action(input = "http://ws.server.data/Data/createUserRequest", output = "http://ws.server.data/Data/createUserResponse")
    public void createUser(
        @WebParam(name = "user", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<User> user);

    /**
     * 
     * @param user
     */
    @WebMethod
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://ws.server.data/", className = "data.server.ws.UpdateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.UpdateUserResponse")
    @Action(input = "http://ws.server.data/Data/updateUserRequest", output = "http://ws.server.data/Data/updateUserResponse")
    public void updateUser(
        @WebParam(name = "user", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<User> user);

    /**
     * 
     * @param uId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "user", targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://ws.server.data/", className = "data.server.ws.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.DeleteUserResponse")
    @Action(input = "http://ws.server.data/Data/deleteUserRequest", output = "http://ws.server.data/Data/deleteUserResponse")
    public int deleteUser(
        @WebParam(name = "uId", targetNamespace = "")
        int uId);

    /**
     * 
     * @param uId
     * @param measureType
     * @return
     *     returns java.util.List<data.server.ws.HealthMeasureHistory>
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "readUserHistory", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadUserHistory")
    @ResponseWrapper(localName = "readUserHistoryResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadUserHistoryResponse")
    @Action(input = "http://ws.server.data/Data/readUserHistoryRequest", output = "http://ws.server.data/Data/readUserHistoryResponse")
    public List<HealthMeasureHistory> readUserHistory(
        @WebParam(name = "uId", targetNamespace = "")
        int uId,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType);

    /**
     * 
     * @param uId
     * @param hmhId
     * @param measureType
     * @return
     *     returns java.util.List<data.server.ws.HealthMeasureHistory>
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "readUserMeasure", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadUserMeasure")
    @ResponseWrapper(localName = "readUserMeasureResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadUserMeasureResponse")
    @Action(input = "http://ws.server.data/Data/readUserMeasureRequest", output = "http://ws.server.data/Data/readUserMeasureResponse")
    public List<HealthMeasureHistory> readUserMeasure(
        @WebParam(name = "uId", targetNamespace = "")
        int uId,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType,
        @WebParam(name = "hmhId", targetNamespace = "")
        int hmhId);

    /**
     * 
     * @param uId
     * @param measure
     */
    @WebMethod
    @RequestWrapper(localName = "saveUserMeasure", targetNamespace = "http://ws.server.data/", className = "data.server.ws.SaveUserMeasure")
    @ResponseWrapper(localName = "saveUserMeasureResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.SaveUserMeasureResponse")
    @Action(input = "http://ws.server.data/Data/saveUserMeasureRequest", output = "http://ws.server.data/Data/saveUserMeasureResponse")
    public void saveUserMeasure(
        @WebParam(name = "uId", targetNamespace = "")
        int uId,
        @WebParam(name = "measure", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<HealthMeasureHistory> measure);

    /**
     * 
     * @param uId
     * @param measure
     */
    @WebMethod
    @RequestWrapper(localName = "updateUserMeasure", targetNamespace = "http://ws.server.data/", className = "data.server.ws.UpdateUserMeasure")
    @ResponseWrapper(localName = "updateUserMeasureResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.UpdateUserMeasureResponse")
    @Action(input = "http://ws.server.data/Data/updateUserMeasureRequest", output = "http://ws.server.data/Data/updateUserMeasureResponse")
    public void updateUserMeasure(
        @WebParam(name = "uId", targetNamespace = "")
        int uId,
        @WebParam(name = "measure", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<HealthMeasureHistory> measure);

    /**
     * 
     * @param uId
     * @param hmhId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "deleteMeasure", targetNamespace = "http://ws.server.data/", className = "data.server.ws.DeleteMeasure")
    @ResponseWrapper(localName = "deleteMeasureResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.DeleteMeasureResponse")
    @Action(input = "http://ws.server.data/Data/deleteMeasureRequest", output = "http://ws.server.data/Data/deleteMeasureResponse")
    public int deleteMeasure(
        @WebParam(name = "uId", targetNamespace = "")
        int uId,
        @WebParam(name = "hmhId", targetNamespace = "")
        int hmhId);

    /**
     * 
     * @return
     *     returns java.util.List<data.server.ws.Goal>
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "readGoalList", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadGoalList")
    @ResponseWrapper(localName = "readGoalListResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadGoalListResponse")
    @Action(input = "http://ws.server.data/Data/readGoalListRequest", output = "http://ws.server.data/Data/readGoalListResponse")
    public List<Goal> readGoalList();

    /**
     * 
     * @param goalId
     * @return
     *     returns data.server.ws.Goal
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "readGoal", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadGoal")
    @ResponseWrapper(localName = "readGoalResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadGoalResponse")
    @Action(input = "http://ws.server.data/Data/readGoalRequest", output = "http://ws.server.data/Data/readGoalResponse")
    public Goal readGoal(
        @WebParam(name = "goalId", targetNamespace = "")
        int goalId);

    /**
     * 
     * @param goalName
     * @return
     *     returns data.server.ws.Goal
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "readGoalByName", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadGoalByName")
    @ResponseWrapper(localName = "readGoalByNameResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadGoalByNameResponse")
    @Action(input = "http://ws.server.data/Data/readGoalByNameRequest", output = "http://ws.server.data/Data/readGoalByNameResponse")
    public Goal readGoalByName(
        @WebParam(name = "goalName", targetNamespace = "")
        String goalName);

    /**
     *
     * @param goal
     */
    @WebMethod
    @RequestWrapper(localName = "createGoal", targetNamespace = "http://ws.server.data/", className = "data.server.ws.CreateGoal")
    @ResponseWrapper(localName = "createGoalResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.CreateGoalResponse")
    @Action(input = "http://ws.server.data/Data/createGoalRequest", output = "http://ws.server.data/Data/createGoalResponse")
    public void createGoal(
        @WebParam(name = "goal", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Goal> goal);

    /**
     * 
     * @param goal
     */
    @WebMethod
    @RequestWrapper(localName = "updateGoal", targetNamespace = "http://ws.server.data/", className = "data.server.ws.UpdateGoal")
    @ResponseWrapper(localName = "updateGoalResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.UpdateGoalResponse")
    @Action(input = "http://ws.server.data/Data/updateGoalRequest", output = "http://ws.server.data/Data/updateGoalResponse")
    public void updateGoal(
        @WebParam(name = "goal", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Goal> goal);

    /**
     * 
     * @param goalId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "deleteGoal", targetNamespace = "http://ws.server.data/", className = "data.server.ws.DeleteGoal")
    @ResponseWrapper(localName = "deleteGoalResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.DeleteGoalResponse")
    @Action(input = "http://ws.server.data/Data/deleteGoalRequest", output = "http://ws.server.data/Data/deleteGoalResponse")
    public int deleteGoal(
        @WebParam(name = "goalId", targetNamespace = "")
        int goalId);

    /**
     * 
     * @return
     *     returns java.util.List<data.server.ws.Activity>
     */
    @WebMethod
    @WebResult(name = "activity", targetNamespace = "")
    @RequestWrapper(localName = "readActivityList", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadActivityList")
    @ResponseWrapper(localName = "readActivityListResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadActivityListResponse")
    @Action(input = "http://ws.server.data/Data/readActivityListRequest", output = "http://ws.server.data/Data/readActivityListResponse")
    public List<Activity> readActivityList();

    /**
     * 
     * @param activityId
     * @return
     *     returns data.server.ws.Activity
     */
    @WebMethod
    @WebResult(name = "activity", targetNamespace = "")
    @RequestWrapper(localName = "readActivity", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadActivity")
    @ResponseWrapper(localName = "readActivityResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadActivityResponse")
    @Action(input = "http://ws.server.data/Data/readActivityRequest", output = "http://ws.server.data/Data/readActivityResponse")
    public Activity readActivity(
        @WebParam(name = "activityId", targetNamespace = "")
        int activityId);

    /**
     * 
     * @param activityName
     * @return
     *     returns data.server.ws.Activity
     */
    @WebMethod
    @WebResult(name = "activity", targetNamespace = "")
    @RequestWrapper(localName = "readActivityByName", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadActivityByName")
    @ResponseWrapper(localName = "readActivityByNameResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.ReadActivityByNameResponse")
    @Action(input = "http://ws.server.data/Data/readActivityByNameRequest", output = "http://ws.server.data/Data/readActivityByNameResponse")
    public Activity readActivityByName(
        @WebParam(name = "activityName", targetNamespace = "")
        String activityName);

    /**
     * 
     * @param activity
     */
    @WebMethod
    @RequestWrapper(localName = "createActivity", targetNamespace = "http://ws.server.data/", className = "data.server.ws.CreateActivity")
    @ResponseWrapper(localName = "createActivityResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.CreateActivityResponse")
    @Action(input = "http://ws.server.data/Data/createActivityRequest", output = "http://ws.server.data/Data/createActivityResponse")
    public void createActivity(
        @WebParam(name = "activity", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Activity> activity);

    /**
     * 
     * @param activity
     */
    @WebMethod
    @RequestWrapper(localName = "updateActivity", targetNamespace = "http://ws.server.data/", className = "data.server.ws.UpdateActivity")
    @ResponseWrapper(localName = "updateActivityResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.UpdateActivityResponse")
    @Action(input = "http://ws.server.data/Data/updateActivityRequest", output = "http://ws.server.data/Data/updateActivityResponse")
    public void updateActivity(
        @WebParam(name = "activity", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Activity> activity);

    /**
     * 
     * @param activityId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "activity", targetNamespace = "")
    @RequestWrapper(localName = "deleteActivity", targetNamespace = "http://ws.server.data/", className = "data.server.ws.DeleteActivity")
    @ResponseWrapper(localName = "deleteActivityResponse", targetNamespace = "http://ws.server.data/", className = "data.server.ws.DeleteActivityResponse")
    @Action(input = "http://ws.server.data/Data/deleteActivityRequest", output = "http://ws.server.data/Data/deleteActivityResponse")
    public int deleteActivity(
        @WebParam(name = "activityId", targetNamespace = "")
        int activityId);

}
